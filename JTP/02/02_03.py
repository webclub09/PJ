##### 02-3 리스트 자료형
### 리스트는 어떻게 만들고 사용할까?
# 리스트를 만들 때는 위에서 보는 것과 같이 대괄호([ ])로 감싸 주고
# 각 요소값들은 쉼표(,)로 구분해 준다.
odd = [1, 3, 5, 7, 9]
print(odd)
#>> [1, 3, 5, 7, 9]
print(odd[0])
#>> 1
print(odd[0]+odd[2])
#>> 6
print(odd[-1])
#>> 9

# 아래의 예처럼 리스트 a를 숫자 1, 2, 3과
# 또 다른 리스트인 ['a', 'b', 'c']를 포함하도록 만들어 보자.
a = [1, 2, 3, ['a', 'b', 'c']]
print(a)
#>> [1, 2, 3, ['a', 'b', 'c']]
print(a[0])
#>> 1
print(a[-1])
#>> ['a', 'b', 'c']

#'a'를 끄집어낼 수 있다. a[-1]이 ['a', 'b', 'c'] 리스트라는 것은 이미 말했다.
# 바로 이 리스트에서 첫 번째 요소를 불러오기 위해 [0]을 붙여준 것이다
print(a[-1][0])
#>> a

### [삼중 리스트에서 인덱싱하기]
a = [1, 2, ['a', 'b', ['Life', 'is']]]
print(a)
#>> [1, 2, ['a', 'b', ['Life', 'is']]]
print(a[2][2][0])
#>> Life

### 리스트의 슬라이싱
a = [1, 2, 3, 4, 5]
print(a[0:2])
#>> [1,2]
a = "12345"
print(a[0:2])
#>> 12

a = [1, 2, 3, 4, 5]
b = a[:2]
c = a[2:]
print(b)
#>> [1, 2]
print(c)
#>> [3, 4, 5]

### [중첩된 리스트에서 슬라이싱하기]
a = [1, 2, 3, ['a', 'b', 'c'], 4, 5]
print(a[2:5])
#>> [3, ['a', 'b', 'c'], 4]
print(a[3][:2])
#>> ['a', 'b']

### 리스트 연산자
# 1) 리스트 더하기(+)
a = [1, 2, 3]
b = [4, 5, 6]
print(a+b)
#>> [1, 2, 3, 4, 5, 6]

# 2) 리스트 반복하기(*)
a = [1, 2, 3]
print(a*3)
#>> [1, 2, 3, 1, 2, 3, 1, 2, 3]

## [초보자가 범하기 쉬운 리스트 연산 오류]

a = [1, 2, 3]
# print(a[2]+"hi")
#> 오류
# int와 str 을 더해서 오류남
# int --> str 로 바꾸고 실행
print(str(a[2])+"hi")
#>> 3hi

### 리스트의 수정, 변경과 삭제
# 1. 리스트에서 하나의 값 수정하기
a = [1, 2, 3]
a[2] = 4
print(a)
#>> [1, 2, 4]

#2. 리스트에서 연속된 범위의 값 수정하기
print(a[1:2])
#>> [2]

a[1:2] = ['a','b','c']
print(a)
#>> [1, 'a', 'b', 'c', 4]

# 3. [ ] 사용해 리스트 요소 삭제하기
a[1:3] = [ ]
print(a)
#>> [1, 'c', 4]

# 4. del 함수 사용해 리스트 요소 삭제하기
del a[1]
print(a)
#>> [1, 4]


### 리스트 관련 함수들
# 리스트에 요소 추가(append)
# append(x)는 리스트의 맨 마지막에 x를 추가시키는 함수이다.
a = [1,2,3]
a.append(4)
print(a)
#>> [1, 2, 3, 4]

a.append([5,6])
print(a)
#>> [1, 2, 3, 4, [5, 6]]

## 리스트 정렬(sort)
# sort 함수는 리스트의 요소를 순서대로 정렬해 준다.
a = [1, 4, 3, 2]
a.sort()
print(a)
#>> [1, 2, 3, 4]

## 리스트 뒤집기(reverse)
# reverse 함수는 리스트를 역순으로 뒤집어 준다.

a = ['a', 'c', 'b']
a.reverse()
print(a)
#>> ['b', 'c', 'a']

## 위치 반환(index)
# index(x) 함수는 리스트에 x라는 값이 있으면 x의 위치값을 리턴한다.
a = [1,2,3]
print(a.index(3))
#>> 2

print(a.index(1))
#>> 0


## 리스트에 요소 삽입(insert)
# insert(a, b)는 리스트의 a번째 위치에 b를 삽입하는 함수이다.
# 파이썬에서는 숫자를 0부터 센다는 것을 반드시 기억하자.
a = [1, 2, 3]
a.insert(0, 4)
print(a)
#>> [4, 1, 2, 3]

a.insert(3, 5)
print (a)
#>> [4, 1, 2, 5, 3]

## 리스트 요소 제거(remove)
# remove(x)는 리스트에서 첫 번째로 나오는 x를 삭제하는 함수이다.
# a가 3이라는 값을 2개 가지고 있을 경우 첫 번째 3만 제거되는 것을 알 수 있다.
a = [1, 2, 3, 1, 2, 3]
a.remove(3)
print(a)
#>> [1, 2, 1, 2, 3]

a.remove(3)
print(a)
#>> [1, 2, 1, 2]

## 리스트 요소 끄집어내기(pop)
# pop()은 리스트의 맨 마지막 요소를 돌려 주고 그 요소는 삭제하는 함수이다.

a = [1,2,3]
print(a.pop())
#>> 3
print(a)
#>> [1, 2]

# a 리스트 [1,2,3]에서 3을 끄집어내고
# 최종적으로 [1, 2]만 남는 것을 볼 수 있다.
# pop(x)는 리스트의 x번째 요소를 돌려 주고 그 요소는 삭제한다.

a = [1,2,3]
print(a.pop(1))
#>> 2
print(a)
#>> [1, 3]

## 리스트에 포함된 요소 x의 개수 세기(count)
# count(x)는 리스트 내에 x가 몇 개 있는지 조사하여 그 개수를 돌려주는 함수이다.
a = [1,2,3,1]
print(a.count(1))
#>> 2

## 리스트 확장(extend)
# extend(x)에서 x에는 리스트만 올 수 있으며 원래의 a 리스트에 x 리스트를 더하게 된다.

a = [1,2,3]
a.extend([4,5])
print(a)
#>> [1, 2, 3, 4, 5]

b = [6, 7]
a.extend(b)
print(a)
#>> [1, 2, 3, 4, 5, 6, 7]

## 리스트의 요소를 제거하는 3가지 방법
# 1.리스트의 remove 함수 이용하기
# a.remove(x) - x는 a리스트의 요소값
a = [1, 2, 3, 'a', 'b', 'c']
a.remove('a')
print(a)
#>> [1, 2, 3, 'b', 'c']

# 2.리스트의 pop 함수 이용하기
# a.pop(x) - x는 a리스트의 인덱스
a = [1, 2, 3, 'a', 'b', 'c']
a.pop(4)
print(a)
#>> [1, 2, 3, 'a', 'c']

# 3.del을 이용하기
# del a[x] - x는 a리스트의 인덱스
a = [1, 2, 3, 'a', 'b', 'c']
del a[4]
print(a)
#>> [1, 2, 3, 'a', 'c']

##### 연습문제

